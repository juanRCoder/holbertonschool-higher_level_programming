The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Importing function from the module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test case dividing by 3.

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Test case dividing by 0.

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    	      ...
    ZeroDivisionError: division by zero

Test case diverging with a float.

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 1.2)
    [[0.83, 1.67, 2.5], [3.33, 4.17, 5.0]]

Passing an empty matrix.

    >>> matrix_divided([], 10)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a tuple as an argument:

    >>> matrix_divided((1, 2, 3), 3)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing a matrix which its rows don't have the same size:

    >>> matrix_divided([[1, 2, 3], [1, 2], [1]], 3)
    Traceback (most recent call last):
    	      ...
    TypeError: Each row of the matrix must have the same size

Dividing a matrix which its elements aren't integer/float numbers:

    >>> matrix_divided([["Hello", "Juan"], ["Hello", "World"]], 3)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing div as a string

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "3")
    Traceback (most recent call last):
    	      ...
    TypeError: div must be a number

Dividing a matrix which has positive and negative integer/float numbers

    >>> matrix_divided([[-1, 2, 3], [4, -5, 6]], 2)
    [[-0.5, 1.0, 1.5], [2.0, -2.5, 3.0]]
