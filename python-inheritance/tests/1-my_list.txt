The ``1-my_list`` module
============================

Using ``MyList``
---------------------

Importing function from the module:
    >>> MyList = __import__('1-my_list').MyList


Printing a sorted list.
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]


Printing a sorted list (repeated numbers)
    >>> my_list = MyList()
    >>> my_list.append(2)
    >>> my_list.append(2)
    >>> my_list += [3]
    >>> my_list.print_sorted()
    [2, 2, 3]


Printing an sorted list (one number)
    >>> my_list = MyList()
    >>> my_list += [3]
    >>> my_list.print_sorted()
    [3]

Printing an empty list
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Printing with no sorted append with negative number
    >>> my_list = MyList()
    >>> my_list += [-2]
    >>> my_list += [-1]
    >>> my_list += [3]
    >>> my_list.print_sorted()
    [-2, -1, 3]

MyList is an instance of the class list
    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True


Instance has the correct type
    >>> my_list = MyList()
    >>> type(my_list) == MyList
    True

Type of the print_sorted method
    >>> my_list = MyList()
    >>> type(my_list.print_sorted)
    <class 'method'>

Check if print_sorted() returns a new list
    >>> my_list = MyList()
    >>> my_list.append(7)
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list.print_sorted()
    [1, 2, 7]
    >>> my_list
    [7, 1, 2]
